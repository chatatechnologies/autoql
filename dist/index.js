/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src_node/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src_node/Utils.js":
/*!***************************!*\
  !*** ./src_node/Utils.js ***!
  \***************************/
/*! exports provided: formatChartData, formatData, formatColumnName, uuidv4, formatDate, copyTextToClipboard, putLoadingContainer, getSafetynetValues, runQuery, deleteSuggestion, csvTo2dArray, getGroupableField, getNotGroupableField, getGroupables, getClickedData, getGroupableCount, getPivotColumnArray, sortPivot, getDatePivotArray, getPivotArray, getSVGString, svgString2Image, mergeOptions, getSpeech, formatLabels, formatDataToHeatmap, formatDataToBarChart, getSupportedDisplayTypesArray, cloneObject, refreshTooltips, tooltipCharts, applyFilter, htmlToElement, createTableContainer, getNumberOfGroupables, supportsRegularPivotTable, isColumnNumberType, isColumnStringType, getColumnTypeAmounts, supports2DCharts, getSupportedDisplayTypes, adjustTableWidth, hideShowTableCols, getStringWidth, allColsHidden, allColHiddenMessage, mouseX, mouseY, getActiveIntegrator, getIntroMessageTopics, closeAllChartPopovers, closeAllSafetynetSelectors, closeAllToolbars, getSuggestionLists, getPlainTextList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatChartData\", function() { return formatChartData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatData\", function() { return formatData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatColumnName\", function() { return formatColumnName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uuidv4\", function() { return uuidv4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDate\", function() { return formatDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyTextToClipboard\", function() { return copyTextToClipboard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"putLoadingContainer\", function() { return putLoadingContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSafetynetValues\", function() { return getSafetynetValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runQuery\", function() { return runQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteSuggestion\", function() { return deleteSuggestion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"csvTo2dArray\", function() { return csvTo2dArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGroupableField\", function() { return getGroupableField; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNotGroupableField\", function() { return getNotGroupableField; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGroupables\", function() { return getGroupables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getClickedData\", function() { return getClickedData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGroupableCount\", function() { return getGroupableCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPivotColumnArray\", function() { return getPivotColumnArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sortPivot\", function() { return sortPivot; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDatePivotArray\", function() { return getDatePivotArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPivotArray\", function() { return getPivotArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSVGString\", function() { return getSVGString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svgString2Image\", function() { return svgString2Image; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeOptions\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpeech\", function() { return getSpeech; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatLabels\", function() { return formatLabels; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDataToHeatmap\", function() { return formatDataToHeatmap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDataToBarChart\", function() { return formatDataToBarChart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSupportedDisplayTypesArray\", function() { return getSupportedDisplayTypesArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneObject\", function() { return cloneObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"refreshTooltips\", function() { return refreshTooltips; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tooltipCharts\", function() { return tooltipCharts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyFilter\", function() { return applyFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"htmlToElement\", function() { return htmlToElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTableContainer\", function() { return createTableContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNumberOfGroupables\", function() { return getNumberOfGroupables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supportsRegularPivotTable\", function() { return supportsRegularPivotTable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColumnNumberType\", function() { return isColumnNumberType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColumnStringType\", function() { return isColumnStringType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColumnTypeAmounts\", function() { return getColumnTypeAmounts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"supports2DCharts\", function() { return supports2DCharts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSupportedDisplayTypes\", function() { return getSupportedDisplayTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"adjustTableWidth\", function() { return adjustTableWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hideShowTableCols\", function() { return hideShowTableCols; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStringWidth\", function() { return getStringWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allColsHidden\", function() { return allColsHidden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allColHiddenMessage\", function() { return allColHiddenMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseX\", function() { return mouseX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mouseY\", function() { return mouseY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getActiveIntegrator\", function() { return getActiveIntegrator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIntroMessageTopics\", function() { return getIntroMessageTopics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closeAllChartPopovers\", function() { return closeAllChartPopovers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closeAllSafetynetSelectors\", function() { return closeAllSafetynetSelectors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"closeAllToolbars\", function() { return closeAllToolbars; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSuggestionLists\", function() { return getSuggestionLists; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPlainTextList\", function() { return getPlainTextList; });\nfunction formatChartData(val, col, options){\r\n    var clone = cloneObject(options);\r\n    clone.dataFormatting.currencyDecimals = 0;\r\n    return formatData(val, col, clone);\r\n}\r\n\r\nfunction formatData(val, col, allOptions={}){\r\n    const options = allOptions.dataFormatting;\r\n    value = '';\r\n    let type = col['type'];\r\n    switch (type) {\r\n        case 'DOLLAR_AMT':\r\n            val = parseFloat(val);\r\n            if(isNaN(val))val = 0;\r\n            const sigDigs = String(parseInt(val.toFixed(2))).length\r\n            value = new Intl.NumberFormat(options.languageCode, {\r\n                style: 'currency',\r\n                currency: options.currencyCode,\r\n                // currency: options.currencyCode,\r\n                minimumFractionDigits: options.currencyDecimals\r\n            }).format(val);\r\n        break;\r\n        case 'DATE':\r\n            var colName = col.name;\r\n            if(colName.includes('year')){\r\n                value = moment(parseInt(val)*1000).format('YYYY');\r\n            }else if(colName.includes('month')){\r\n                value = moment(parseInt(val)*1000).format(\r\n                    options.monthYearFormat\r\n                );\r\n            }else{\r\n                value = moment(parseInt(val)*1000).format(\r\n                    options.dayMonthYearFormat\r\n                );\r\n            }\r\n        break;\r\n        case 'PERCENT':\r\n            if(allOptions.dataFormatting.comparisonDisplay == 'PERCENT'){\r\n                val = parseFloat(val) * 100;\r\n                if(!isNaN(val)){\r\n                    value =  val.toFixed(2) + '%';\r\n                }else{\r\n                    value = '';\r\n                }\r\n            }else{\r\n                value = parseFloat(val).toFixed(4);\r\n            }\r\n        break;\r\n        case 'QUANTITY':\r\n            var n = Math.abs(parseFloat(val)); // Change to positive\r\n            var decimal = n - Math.floor(n);\r\n            if(decimal > 0){\r\n                value = parseFloat(val).toFixed(options.quantityDecimals);\r\n            }else{\r\n                value = parseInt(val);\r\n            }\r\n\r\n        break;\r\n        case 'RATIO':\r\n            if(allOptions.dataFormatting.comparisonDisplay == 'PERCENT'){\r\n                val = parseFloat(val) * 100;\r\n                if(!isNaN(val)){\r\n                    value =  val.toFixed(2) + '%';\r\n                }else{\r\n                    value = '';\r\n                }\r\n            }else{\r\n                value = parseFloat(val).toFixed(4);\r\n            }\r\n        break;\r\n        case 'NUMBER':\r\n            val = parseFloat(val) * 100;\r\n            if(!isNaN(val)){\r\n                value =  val.toFixed(2) + '%';\r\n            }else{\r\n                value = '';\r\n            }\r\n        break;\r\n        case 'DATE_STRING':\r\n            var momentObj = moment(val, 'YYYY-MM');\r\n            value = momentObj.format(options.monthYearFormat);\r\n        break;\r\n        default:\r\n            if(Object.prototype.toString.call(val) === '[object Object]'){\r\n                value = '';\r\n            }else{\r\n                value = val;\r\n            }\r\n    }\r\n    if(value === undefined)return '';\r\n    else return value;\r\n}\r\n\r\nfunction formatColumnName(col){\r\n    return col.replace(/__/g, ' ').replace(/_/g, ' ').\r\n    replace(/(?:^|\\s)\\S/g, function(a) { return a.toUpperCase(); })\r\n}\r\n\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nfunction formatDate(date) {\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n    // NOTE: this case only occurs in tests\r\n    if(Number.isNaN(monthIndex)){\r\n        year = '1969';\r\n        day = '31';\r\n        monthIndex = 11;\r\n    }\r\n    // return MONTH_NAMES[monthIndex] + ' ' + day + ', ' + year;\r\n    return MONTH_NAMES[monthIndex] + ' ' + year;\r\n}\r\n\r\nfunction copyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n        var msg = successful ? 'successful' : 'unsuccessful';\r\n    } catch (err) {\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nfunction putLoadingContainer(target){\r\n    var responseLoadingContainer = document.createElement('div');\r\n    var responseLoading = document.createElement('div');\r\n\r\n    responseLoadingContainer.classList.add('chat-bar-loading');\r\n    responseLoading.classList.add('response-loading');\r\n    for (var i = 0; i <= 3; i++) {\r\n        responseLoading.appendChild(document.createElement('div'));\r\n    }\r\n\r\n    responseLoadingContainer.appendChild(responseLoading);\r\n    target.appendChild(responseLoadingContainer);\r\n    return responseLoadingContainer;\r\n}\r\n\r\nfunction getSafetynetValues(node){\r\n    var nodes = node.getElementsByClassName('safetynet-value');\r\n    var words = [];\r\n    for (var i = 0; i < nodes.length; i++) {\r\n        words.push(nodes[i].textContent.trim());\r\n    }\r\n    return words;\r\n}\r\n\r\nfunction runQuery(event, objContext){\r\n\r\n    if(event.target.tagName == 'svg'){\r\n        var node = event.target.parentElement.parentElement;\r\n    }else if(event.target.tagName == 'path'){\r\n        var node = event.target.parentElement.parentElement.parentElement;\r\n    }else{\r\n        var node = event.target.parentElement;\r\n    }\r\n    if(node.classList.contains('autoql-vanilla-chata-safety-net-execute-btn')){\r\n        node = node.parentElement;\r\n    }\r\n    var words = getSafetynetValues(node);\r\n\r\n    switch (objContext.constructor) {\r\n        case DataMessenger:\r\n            objContext.keyboardAnimation(words.join(' '));\r\n            // objContext.sendMessage(\r\n            //     words.join(' '),\r\n            //     'data_messenger.validation'\r\n            // );\r\n            break;\r\n        default:\r\n            objContext.sendMessageToResponseRenderer(\r\n                words.join(' ')\r\n            );\r\n        ;\r\n    }\r\n}\r\n\r\nfunction deleteSuggestion(event){\r\n    if(event.target.tagName == 'svg'){\r\n        var node = event.target.parentElement;\r\n    }else{\r\n        var node = event.target.parentElement.parentElement;\r\n    }\r\n    node.parentElement.removeChild(node);\r\n}\r\n\r\nfunction csvTo2dArray(parseMe) {\r\n    const splitFinder = /,|\\r?\\n|\"(\\\\\"|[^\"])*?\"/g;\r\n    let currentRow = [];\r\n    const rowsOut = [currentRow];\r\n    let lastIndex = splitFinder.lastIndex = 0;\r\n\r\n    const pushCell = (endIndex) => {\r\n        endIndex = endIndex || parseMe.length;\r\n        const addMe = parseMe.substring(lastIndex, endIndex);\r\n        currentRow.push(addMe.replace(/^\"|\"$/g, \"\"));\r\n        lastIndex = splitFinder.lastIndex;\r\n    }\r\n\r\n    let regexResp;\r\n    while (regexResp = splitFinder.exec(parseMe)) {\r\n        const split = regexResp[0];\r\n\r\n        if (split.startsWith(`\"`) === false) {\r\n            const splitStartIndex = splitFinder.lastIndex - split.length;\r\n            pushCell(splitStartIndex);\r\n\r\n            const isNewLine = /^\\r?\\n$/.test(split);\r\n            if (isNewLine) { rowsOut.push(currentRow = []); }\r\n        }\r\n    }\r\n    pushCell();\r\n    return rowsOut;\r\n}\r\n\r\nfunction getGroupableField(json){\r\n    var r = {\r\n        indexCol: -1,\r\n        jsonCol: {},\r\n        name: ''\r\n    }\r\n    for (var i = 0; i < json['data']['columns'].length; i++) {\r\n        if(json['data']['columns'][i]['groupable']){\r\n            r['indexCol'] = i;\r\n            r['jsonCol'] = json['data']['columns'][i];\r\n            r['name'] = json['data']['columns'][i]['name'];\r\n            return r;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction getNotGroupableField(json){\r\n    var r = {\r\n        indexCol: -1,\r\n        jsonCol: {},\r\n        name: ''\r\n    }\r\n    for (var i = 0; i < json['data']['columns'].length; i++) {\r\n        if(!json['data']['columns'][i]['groupable']){\r\n            r['indexCol'] = i;\r\n            r['jsonCol'] = json['data']['columns'][i];\r\n            r['name'] = json['data']['columns'][i]['name'];\r\n            return r;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction getGroupables(json){\r\n    var clone = cloneObject(json);\r\n    var cont = 0;\r\n    var groups = []\r\n    for (var i = 0; i < clone['data']['columns'].length; i++) {\r\n        if(clone['data']['columns'][i]['groupable']){\r\n            clone['data']['columns'][i].index = i;\r\n            groups.push(clone['data']['columns'][i]);\r\n        }\r\n    }\r\n    return groups;\r\n}\r\n\r\nfunction getClickedData(json, ...params){\r\n    var groupables = getGroupables(json);\r\n    var data = {\r\n        supportedByAPI: true,\r\n        data: []\r\n    }\r\n\r\n    for (var i = 0; i < groupables.length; i++) {\r\n        var indexData = groupables[i].index;\r\n        data.data.push({\r\n            name: groupables[i].name,\r\n            value: params[indexData]\r\n        })\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nfunction getGroupableCount(json){\r\n    var cont = 0;\r\n    for (var i = 0; i < json['data']['columns'].length; i++) {\r\n        if(json['data']['columns'][i]['groupable']){\r\n            cont++;\r\n        }\r\n    }\r\n    return cont;\r\n}\r\n\r\nfunction getPivotColumnArray(json, options, _data){\r\n    var lines = _data;\r\n    var values = [];\r\n    var firstColName = '';\r\n    for (var i = 0; i < lines.length; i++) {\r\n        var data = lines[i];\r\n        var row = [];\r\n        for (var x = 0; x < data.length; x++) {\r\n            if(firstColName == '' && json['data']['columns'][x]['groupable']){\r\n                var name = json['data']['columns'][x]['display_name'] ||\r\n                json['data']['columns'][x]['name'];\r\n                firstColName = name.charAt(0).toUpperCase() + name.slice(1);\r\n            }\r\n            // row.push(formatData(\r\n            //     data[x],\r\n            //     json['data']['columns'][x],\r\n            //     options\r\n            // ));\r\n            row.push(data[x]);\r\n        }\r\n        values.push(row);\r\n    }\r\n    var pivotArray = getPivotArray(values, 0, 1, 2, firstColName);\r\n    return pivotArray;\r\n}\r\n\r\nfunction sortPivot(pivotArray, colIndex, operator){\r\n    pivotArray.shift();\r\n    pivotArray.shift();\r\n\r\n\r\n    if(operator == 'asc'){\r\n        var comparator = function(a, b) {\r\n\r\n            if(a[colIndex].charAt(0) === '$' || a['colIndex'] === '0'){\r\n                return parseFloat(\r\n                    a[colIndex].toString().slice(1)\r\n                ) > parseFloat(b[colIndex].toString().slice(1)) ? 1 : -1;\r\n            }else{\r\n                return (a[colIndex]) > (b[colIndex]) ? 1 : -1;\r\n            }\r\n        }\r\n    }else{\r\n        var comparator = function(a, b) {\r\n            if(a[colIndex].charAt(0) === '$' || a['colIndex'] === '0'){\r\n                return parseFloat(\r\n                    a[colIndex].toString().slice(1)\r\n                ) < parseFloat(b[colIndex].toString().slice(1)) ? 1 : -1;\r\n            }else{\r\n                return (a[colIndex]) < (b[colIndex]) ? 1 : -1;\r\n            }\r\n        }\r\n    }\r\n    return cloneObject(pivotArray.sort(comparator));\r\n}\r\n\r\nfunction getDatePivotArray(json, options, _data){\r\n    var lines = _data;\r\n    var values = [];\r\n    for (var i = 0; i < lines.length; i++) {\r\n        var data = lines[i];\r\n        var row = [];\r\n        for (var x = 0; x < data.length; x++) {\r\n\r\n            switch (json['data']['columns'][x]['type']) {\r\n                case 'DATE':\r\n                    var value = data[x];\r\n                    var date = new Date( parseInt(value) * 1000);\r\n                    row.unshift(\r\n                        MONTH_NAMES[date.getMonth()], date.getFullYear()\r\n                    );\r\n                    break;\r\n                default:\r\n                    // row.push(formatData(\r\n                    //     data[x], json['data']['columns'][x],\r\n                    //     options\r\n                    // )\r\n                    // );\r\n                    row.push(data[x])\r\n            }\r\n        }\r\n        values.push(row);\r\n    }\r\n\r\n    var pivotArray = getPivotArray(values, 0, 1, 2, 'Month');\r\n    return pivotArray;\r\n}\r\n\r\nfunction getPivotArray(dataArray, rowIndex, colIndex, dataIndex, firstColName) {\r\n    var result = {}, ret = [];\r\n    var newCols = [];\r\n    for (var i = 0; i < dataArray.length; i++) {\r\n\r\n        if (!result[dataArray[i][rowIndex]]) {\r\n            result[dataArray[i][rowIndex]] = {};\r\n        }\r\n        result[dataArray[i][rowIndex]][dataArray[i][colIndex]] = dataArray[i][dataIndex];\r\n\r\n        if (newCols.indexOf(dataArray[i][colIndex]) == -1) {\r\n            newCols.push(dataArray[i][colIndex]);\r\n        }\r\n    }\r\n\r\n    newCols.sort();\r\n    var item = [];\r\n\r\n    item.push(firstColName);\r\n    item.push.apply(item, newCols);\r\n    ret.push(item);\r\n\r\n    for (var key in result) {\r\n        item = [];\r\n        item.push(key);\r\n        for (var i = 0; i < newCols.length; i++) {\r\n            item.push(result[key][newCols[i]] || \"\");\r\n        }\r\n        ret.push(item);\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction getSVGString(svgNode) {\r\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\r\n    var cssStyleText = getCSSStyles( svgNode );\r\n    appendCSS( cssStyleText, svgNode );\r\n\r\n    var serializer = new XMLSerializer();\r\n    var svgString = serializer.serializeToString(svgNode);\r\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\r\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\r\n\r\n    return svgString;\r\n\r\n    function getCSSStyles( parentElement ) {\r\n        var selectorTextArr = [];\r\n\r\n        // Add Parent element Id and Classes to the list\r\n        selectorTextArr.push( '#'+parentElement.id );\r\n        for (var c = 0; c < parentElement.classList.length; c++)\r\n        if ( !contains('.'+parentElement.classList[c], selectorTextArr) )\r\n        selectorTextArr.push( '.'+parentElement.classList[c] );\r\n\r\n        // Add Children element Ids and Classes to the list\r\n        var nodes = parentElement.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var id = nodes[i].id;\r\n            if ( !contains('#'+id, selectorTextArr) )\r\n            selectorTextArr.push( '#'+id );\r\n\r\n            var classes = nodes[i].classList;\r\n            for (var c = 0; c < classes.length; c++)\r\n            if ( !contains('.'+classes[c], selectorTextArr) )\r\n            selectorTextArr.push( '.'+classes[c] );\r\n        }\r\n\r\n        // Extract CSS Rules\r\n        var extractedCSSText = \"\";\r\n        for (var i = 0; i < document.styleSheets.length; i++) {\r\n            var s = document.styleSheets[i];\r\n\r\n            try {\r\n                if(!s.cssRules) continue;\r\n            } catch( e ) {\r\n                if(e.name !== 'SecurityError') throw e; // for Firefox\r\n                continue;\r\n            }\r\n\r\n            var cssRules = s.cssRules;\r\n            for (var r = 0; r < cssRules.length; r++) {\r\n                if ( contains( cssRules[r].selectorText, selectorTextArr ) )\r\n                extractedCSSText += cssRules[r].cssText;\r\n            }\r\n        }\r\n\r\n\r\n        return extractedCSSText;\r\n\r\n        function contains(str,arr) {\r\n            return arr.indexOf( str ) === -1 ? false : true;\r\n        }\r\n\r\n    }\r\n\r\n    function appendCSS( cssText, element ) {\r\n        var styleElement = document.createElement(\"style\");\r\n        styleElement.setAttribute(\"type\",\"text/css\");\r\n        styleElement.innerHTML = cssText;\r\n        var refNode = element.hasChildNodes() ? element.children[0] : null;\r\n        element.insertBefore( styleElement, refNode );\r\n    }\r\n}\r\n\r\nfunction svgString2Image(svgString, width, height) {\r\n    var imgsrc = 'data:image/svg+xml;base64,'+ btoa(\r\n        unescape(encodeURIComponent(svgString))\r\n    );\r\n\r\n    var canvas = document.createElement(\"canvas\");\r\n    var context = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    var image = new Image();\r\n    image.onload = function() {\r\n        context.clearRect ( 0, 0, width, height );\r\n        context.drawImage(image, 0, 0, width, height);\r\n        var link = document.createElement(\"a\");\r\n        link.setAttribute('href', canvas.toDataURL(\"image/png;base64\"));\r\n        link.setAttribute('download', 'Chart.png');\r\n        link.click();\r\n    };\r\n\r\n\r\n    image.src = imgsrc;\r\n}\r\n\r\nfunction mergeOptions(objList){\r\n    var output = [];\r\n    for (var i = 0; i < objList.length; i++) {\r\n        let obj = objList[i];\r\n        for (var [key, value] of Object.entries(obj)) {\r\n            output[key] = value;\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction getSpeech(button){\r\n    window.SpeechRecognition =\r\n    window.webkitSpeechRecognition || window.SpeechRecognition;\r\n    if(window.SpeechRecognition){\r\n        let recognition = new window.SpeechRecognition();\r\n        recognition.interimResults = true;\r\n        recognition.maxAlternatives = 10;\r\n        recognition.continuous = true;\r\n        return recognition;\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nfunction formatLabels(labels, col, options){\r\n    labels = labels.sort();\r\n    for (var i = 0; i < labels.length; i++) {\r\n        labels[i] = formatData(labels[i], col, options);\r\n    }\r\n    return labels;\r\n}\r\n\r\nfunction formatDataToHeatmap(json, options){\r\n    var lines = json['data']['rows'];\r\n    var values = [];\r\n    var groupables = getGroupableFields(json);\r\n    var notGroupableField = getNotGroupableField(json);\r\n    var groupableIndex1 = groupables[0].indexCol;\r\n    var groupableIndex2 = groupables[1].indexCol;\r\n    var notGroupableIndex = notGroupableField.indexCol;\r\n\r\n    var col1 = json['data']['columns'][groupableIndex1];\r\n    var col2 = json['data']['columns'][groupableIndex2];\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n        var data = lines[i];\r\n        var row = {};\r\n        row['labelY'] = formatData(data[groupableIndex1], col1, options);\r\n        row['labelX'] = formatData(data[groupableIndex2], col2, options);\r\n        row['unformatY'] = data[groupableIndex1];\r\n        row['unformatX'] = data[groupableIndex2];\r\n        var value = parseFloat(data[notGroupableIndex]);\r\n        row['value'] = value;\r\n        values.push(row);\r\n    }\r\n    return values;\r\n}\r\n\r\nfunction formatDataToBarChart(json, options){\r\n    var lines = json['data']['rows'];\r\n    var values = [];\r\n    var col1 = json['data']['columns'][0];\r\n    var hasNegativeValues = false;\r\n    var groupableField = getGroupableField(json);\r\n    var notGroupableField = getNotGroupableField(json);\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n        var data = lines[i];\r\n        var row = {};\r\n        row['label'] = formatData(\r\n            data[groupableField.indexCol], groupableField.jsonCol, options\r\n        );\r\n        var value = parseFloat(data[notGroupableField.indexCol]);\r\n        if(value < 0 && !hasNegativeValues){\r\n            hasNegativeValues = true;\r\n        }\r\n        row['value'] = value;\r\n\r\n\r\n        values.push(row);\r\n    }\r\n    return [values, hasNegativeValues];\r\n}\r\n\r\nfunction getSupportedDisplayTypesArray(){\r\n    return [\r\n        'table',\r\n        // 'date_pivot',\r\n        'pivot_column',\r\n        'line',\r\n        'bar',\r\n        'column',\r\n        'heatmap',\r\n        'bubble',\r\n        'stacked_bar',\r\n        'stacked_column'\r\n    ];\r\n}\r\n\r\nfunction cloneObject(source) {\r\n    if (Object.prototype.toString.call(source) === '[object Array]') {\r\n        var clone = [];\r\n        for (var i=0; i<source.length; i++) {\r\n            clone[i] = cloneObject(source[i]);\r\n        }\r\n        return clone;\r\n    } else if (typeof(source)==\"object\") {\r\n        var clone = {};\r\n        for (var prop in source) {\r\n            if (source.hasOwnProperty(prop)) {\r\n                clone[prop] = cloneObject(source[prop]);\r\n            }\r\n        }\r\n        return clone;\r\n    } else {\r\n        return source;\r\n    }\r\n}\r\n\r\nfunction refreshTooltips(){\r\n    tippy('.chata-interpretation', {\r\n        theme: 'chata',\r\n        onShow: function(instance){\r\n            var data = ChataUtils.responses[instance.reference.dataset.id]['data'];\r\n            var content  = `<span class='title-tip'>Interpretation:</span> <span class=\"text-tip\">${data['interpretation']}</span>`;\r\n            // if(ChataUtils.options.debug){\r\n            //     content += `</br></br>\r\n            //     <span class='title-tip'>SQL:</span> <span class=\"text-tip\">${data['sql']}</span>\r\n            //     `;\r\n            // }\r\n            instance.setContent(\r\n                content\r\n            );\r\n        }\r\n    });\r\n    tippy('[data-tippy-content]', {\r\n        theme: 'chata',\r\n        delay: [500],\r\n        dynamicTitle: true\r\n    })\r\n}\r\n\r\nfunction tooltipCharts(){\r\n    var get2dContent = (instance) => {\r\n        var dataset = instance.reference.dataset;\r\n        var content  = `<span class='title-tip'>${dataset.col1}:</span> <span class=\"text-tip\">${dataset.colvalue1}</span>`;\r\n        content += '<br/>';\r\n        content += `<span class='title-tip'>${dataset.col2}:</span> <span class=\"text-tip\">${dataset.colvalue2}</span>`\r\n        return content;\r\n    }\r\n\r\n    tippy('.tooltip-2d', {\r\n        theme: 'chata',\r\n        onShow: function(instance){\r\n            instance.setContent(\r\n                get2dContent(instance)\r\n            );\r\n        }\r\n    })\r\n\r\n    tippy('.tooltip-3d', {\r\n        theme: 'chata',\r\n        onShow: function(instance){\r\n            var dataset = instance.reference.dataset;\r\n            var content = get2dContent(instance);\r\n            content += '<br/>';\r\n            content += `<span class='title-tip'>${dataset.col3}:</span> <span class=\"text-tip\">${dataset.colvalue3}</span>`;\r\n            instance.setContent(\r\n                content\r\n            );\r\n        }\r\n    })\r\n}\r\n\r\nfunction applyFilter(idRequest, array){\r\n    var _table = document.querySelector(`[data-componentid='${idRequest}']`);\r\n    var inputs = _table.headerElement.getElementsByTagName('input');\r\n    var json = ChataUtils.responses[_table.dataset.componentid];\r\n    var rows = array || cloneObject(json['data']['rows']);\r\n    for (var i = 0; i < inputs.length; i++) {\r\n        if(inputs[i].value == '')continue;\r\n        var colType = inputs[i].colType;\r\n        var compareValue = inputs[i].value.toLowerCase();\r\n        rows = rows.filter(function(elem){\r\n            var v = elem[i];\r\n            if(colType == 'DATE'){\r\n                var formatDate = formatData(\r\n                    v,\r\n                    json['data']['columns'][i],\r\n                    ChataUtils.options\r\n            );\r\n                return formatDate.toLowerCase().includes(compareValue);\r\n            }else if(\r\n                colType == 'DOLLAR_AMT' ||\r\n                colType == 'QUANTITY' ||\r\n                colType == 'PERCENT'\r\n            ) {\r\n                var trimmedValue = compareValue.trim();\r\n                if (trimmedValue.length >= 2) {\r\n                    const number = parseFloat(trimmedValue.substr(1));\r\n                    if (trimmedValue[0] === '>' && trimmedValue[1] === '=') {\r\n                        return v >= number;\r\n                    } else if (trimmedValue[0] === '>') {\r\n                        return v > number;\r\n                    } else if (trimmedValue[0] === '<' && trimmedValue[1] === '=') {\r\n                        return v <= number;\r\n                    } else if (trimmedValue[0] === '<') {\r\n                        return v < number;\r\n                    } else if (trimmedValue[0] === '!' && trimmedValue[1] === '=') {\r\n                        return v !== number;\r\n                    } else if (trimmedValue[0] === '=') {\r\n                        return v === number;\r\n                    }\r\n                }\r\n                return v.toString().includes(compareValue);\r\n            }else{\r\n                return v.toString().toLowerCase().includes(compareValue);\r\n            }\r\n        });\r\n    }\r\n    return rows;\r\n}\r\n\r\nfunction htmlToElement(html) {\r\n    var template = document.createElement('template');\r\n    html = html.trim();\r\n    template.innerHTML = html;\r\n    return template.content.firstChild;\r\n}\r\n\r\nfunction createTableContainer(){\r\n    var div = document.createElement('div');\r\n    div.classList.add('autoql-vanilla-chata-table');\r\n    return div;\r\n}\r\n\r\nconst getNumberOfGroupables = columns => {\r\n    if (columns) {\r\n        let numberOfGroupables = 0\r\n        columns.forEach(col => {\r\n            if (col.groupable) {\r\n                numberOfGroupables += 1\r\n            }\r\n        })\r\n        return numberOfGroupables\r\n    }\r\n    return null\r\n}\r\n\r\nconst supportsRegularPivotTable = columns => {\r\n    const hasTwoGroupables = getNumberOfGroupables(columns) === 2\r\n    return hasTwoGroupables && columns.length === 3\r\n}\r\n\r\nconst isColumnNumberType = col => {\r\n    const type = col.type\r\n    return (\r\n        type === 'DOLLAR_AMT' ||\r\n        type === 'QUANTITY' ||\r\n        type === 'PERCENT' ||\r\n        type === 'RATIO'\r\n    )\r\n}\r\n\r\nconst isColumnStringType = col => {\r\n    const  type = col.type\r\n    return type === 'STRING' || type === 'DATE_STRING' || type === 'DATE'\r\n}\r\n\r\nconst getColumnTypeAmounts = columns => {\r\n    let amountOfStringColumns = 0\r\n    let amountOfNumberColumns = 0\r\n\r\n    columns.forEach(col => {\r\n        if (isColumnNumberType(col)) {\r\n            amountOfNumberColumns += 1\r\n        } else if (isColumnStringType(col)) {\r\n            amountOfStringColumns += 1\r\n        }\r\n    })\r\n\r\n    return { amountOfNumberColumns, amountOfStringColumns }\r\n}\r\n\r\nconst supports2DCharts = columns => {\r\n    const amounts =\r\n    getColumnTypeAmounts(\r\n        columns\r\n    )\r\n\r\n    return amounts.amountOfNumberColumns > 0\r\n    && amounts.amountOfStringColumns > 0\r\n}\r\n\r\nconst getSupportedDisplayTypes = response => {\r\n    try {\r\n        if (!response.data.display_type) {\r\n            return []\r\n        }\r\n\r\n        const displayType = response.data.display_type\r\n\r\n        if (displayType === 'suggestion' || displayType === 'help') {\r\n            return [displayType]\r\n        }\r\n\r\n        const columns = response.data.columns || [];\r\n        const rows = response.data.rows || [];\r\n\r\n        if (!columns || rows.length <= 1) {\r\n            return []\r\n        }\r\n\r\n        if (supportsRegularPivotTable(columns)) {\r\n            let supportedDisplayTypes = ['table']\r\n            if (rows.length < 1000) {\r\n                supportedDisplayTypes = [\r\n                    'pivot_table',\r\n                    'stacked_bar',\r\n                    'stacked_column',\r\n                    'stacked_line',\r\n                    'bubble',\r\n                    'heatmap',\r\n                    'table'\r\n                ]\r\n            }\r\n            return supportedDisplayTypes\r\n        } else if (supports2DCharts(columns)) {\r\n            const supportedDisplayTypes = ['table', 'bar', 'column', 'line']\r\n            supportedDisplayTypes.push('pie')\r\n                const dateColumn = columns.find(\r\n                    col => col.type === 'DATE' || col.type === 'DATE_STRING'\r\n                )\r\n\r\n                if(dateColumn){\r\n                    if (\r\n                        dateColumn.name &&\r\n                        dateColumn.name.toLowerCase().includes('month') &&\r\n                        columns.length === 2\r\n                    ) {\r\n                        supportedDisplayTypes.push('pivot_table')\r\n                    }\r\n                }\r\n                return supportedDisplayTypes\r\n            }\r\n            return ['table']\r\n        } catch (error) {\r\n            console.error(error)\r\n            return ['table']\r\n        }\r\n}\r\n\r\nasync function adjustTableWidth(table, thArray, cols, selector='[data-indexrow]', offset=0){\r\n\r\n    var headerWidth = 0;\r\n    var rowsElements = table.querySelectorAll(selector);\r\n    var tdEl = rowsElements[0].getElementsByTagName('td');\r\n    var sizes = [];\r\n    for (var x = 0; x < tdEl.length; x++) {\r\n\r\n        if(cols[x] && 'is_visible' in cols[x] && !cols[x]['is_visible'])continue;\r\n\r\n        const div = document.createElement('div')\r\n        div.innerHTML = thArray[x].textContent;\r\n        div.style.display = 'inline-block';\r\n        div.style.position = 'absolute';\r\n        div.style.visibility = 'hidden';\r\n        document.body.appendChild(div);\r\n\r\n        w = tdEl[x].offsetWidth;\r\n\r\n        if(div.offsetWidth > tdEl[x].offsetWidth){\r\n            w = div.offsetWidth + 70;\r\n        }\r\n        w += offset;\r\n        thArray[x].style.width = (w) + 'px';\r\n        tdEl[x].style.width = (w) + 'px';\r\n\r\n        headerWidth += w;\r\n        document.body.removeChild(div);\r\n    }\r\n\r\n    return headerWidth;\r\n}\r\n\r\nfunction hideShowTableCols(table){\r\n    var json = ChataUtils.responses[table.dataset.componentid];\r\n    var cols = json['data']['columns'];\r\n    const thList = table.headerElement.childNodes;\r\n    const trList = table.childNodes;\r\n    for (var i = 0; i < thList.length; i++) {\r\n        if(!cols[i]['is_visible']){\r\n            thList[i].classList.add('chata-hidden');\r\n        }else{\r\n            thList[i].classList.remove('chata-hidden');\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < trList.length; i++) {\r\n        var tdList = trList[i].childNodes;\r\n        for (var x = 0; x < tdList.length; x++) {\r\n            if(!cols[x]['is_visible']){\r\n                tdList[x].classList.add('chata-hidden');\r\n            }else{\r\n                tdList[x].classList.remove('chata-hidden');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getStringWidth(string){\r\n    const div = document.createElement('div')\r\n    div.innerHTML = string;\r\n    div.style.display = 'inline-block';\r\n    div.style.position = 'absolute';\r\n    div.style.visibility = 'hidden';\r\n    document.body.appendChild(div);\r\n    var width = div.offsetWidth;\r\n    document.body.removeChild(div);\r\n    return width;\r\n}\r\n\r\nfunction allColsHidden(json){\r\n    var cols = json['data']['columns'];\r\n    var isAllHidden = true;\r\n    for (var i = 0; i < cols.length; i++) {\r\n        if(cols[i].is_visible){\r\n            isAllHidden = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isAllHidden;\r\n}\r\n\r\nfunction allColHiddenMessage(table){\r\n    const requestId = table.dataset.componentid;\r\n    var csvHandlerOption = table.tabulator.parentContainer.querySelector(\r\n        '[data-name-option=\"csv-handler\"]'\r\n    );\r\n\r\n    var csvCopyOption = table.tabulator.parentContainer.querySelector(\r\n        '[data-name-option=\"copy-csv-handler\"]'\r\n    );\r\n\r\n    var filterOption = table.tabulator.parentContainer.querySelector(\r\n        '[data-name-option=\"filter-action\"]'\r\n    );\r\n    const json = ChataUtils.responses[requestId];\r\n    var isAllHidden = allColsHidden(json);\r\n    let message;\r\n    if(table.noColumnsElement){\r\n        message = table.noColumnsElement;\r\n    }else{\r\n        message = htmlToElement(\r\n        `<div class=\"autoql-vanilla-no-columns-error-message\">\r\n            <div>\r\n                <span class=\"chata-icon warning-icon\">\r\n                    ${WARNING}\r\n                </span>\r\n                <br> All columns in this table are currently hidden.\r\n                You can adjust your column visibility preferences using\r\n                the Column Visibility Manager\r\n                (<span class=\"chata-icon eye-icon\">${COLUMN_EDITOR}</span>)\r\n                in the Options Toolbar.\r\n            </div>\r\n        </div>`);\r\n        table.parentElement.appendChild(message);\r\n        table.noColumnsElement = message;\r\n    }\r\n\r\n    if(isAllHidden){\r\n        message.style.display = 'flex';\r\n        table.style.display = 'none';\r\n        csvHandlerOption.style.display = 'none';\r\n        csvCopyOption.style.display = 'none';\r\n        filterOption.style.display = 'none';\r\n\r\n    }else{\r\n        message.style.display = 'none';\r\n        table.style.display = 'block';\r\n        csvHandlerOption.style.display = 'block';\r\n        csvCopyOption.style.display = 'block';\r\n        filterOption.style.display = 'inline-block';\r\n        table.tabulator.redraw();\r\n    }\r\n}\r\n\r\nfunction mouseX(evt) {\r\n    if (evt.pageX) {\r\n        return evt.pageX;\r\n    } else if (evt.clientX) {\r\n        return evt.clientX + (document.documentElement.scrollLeft ?\r\n            document.documentElement.scrollLeft :\r\n            document.body.scrollLeft);\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mouseY(evt) {\r\n    if(evt.pageY){\r\n        return evt.pageY;\r\n    }else if (evt.clientY){\r\n        return evt.clientY + (document.documentElement.scrollTop ?\r\n            document.documentElement.scrollTop :\r\n            document.body.scrollTop);\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nconst getActiveIntegrator = (domain) => {\r\n    if (domain.includes('spira')) {\r\n        return 'spira'\r\n    } else if (domain.includes('locate')) {\r\n        return 'locate'\r\n    } else if (domain.includes('purefacts')) {\r\n        return 'purefacts'\r\n    } else if (domain.includes('bluelink')) {\r\n        return 'bluelink'\r\n    } else if (domain.includes('lefort')) {\r\n        return 'lefort'\r\n    } else if (domain.includes('nbccontest')) {\r\n        return 'nbcomp'\r\n    } else if (domain.includes('vitruvi')) {\r\n        return 'vitruvi'\r\n    } else if (domain.includes('accounting-demo')) {\r\n        return 'demo'\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nconst getIntroMessageTopics = (integrator) => {\r\n    const topics =\r\n    {\r\n        spira: [\r\n            {\r\n                topic: 'Revenue',\r\n                queries: [\r\n                    'Total revenue this year',\r\n                    'Total revenue by month for the last six months',\r\n                    'Total revenue by area last year',\r\n                    'Total revenue by customer for the last six months',\r\n                    'Average revenue by area last year',\r\n                    'Average revenue by ticket type for the last six months',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Estimates',\r\n                queries: [\r\n                    'Total estimates by area last year',\r\n                    'Total estimates by ticket type last year',\r\n                    'Number of estimates by customer this year',\r\n                    'Number of estimates by job type last year',\r\n                    'Average estimates by ticket type last year',\r\n                    'Average estimates by month last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Utilization',\r\n                queries: [\r\n                    'Total utilization on resources last month',\r\n                    'Total resource hours by area last month ',\r\n                    'Total hours utilized for personnel last month',\r\n                    'Total hours utilization by job last month',\r\n                    'Total hours utilization on equipment last year',\r\n                    'Average hours utilization by job type last month',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Jobs',\r\n                queries: [\r\n                    'All jobs scheduled to start this year',\r\n                    'All active jobs scheduled to end last year',\r\n                    'All jobs still open from last year',\r\n                    'All jobs in bid state',\r\n                    'Number of scheduled jobs by area',\r\n                    'Number of open jobs by customer',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Tickets',\r\n                queries: [\r\n                    'Total tickets by month last year',\r\n                    'Total tickets by customer this year',\r\n                    'Average ticket by area last year',\r\n                    'All void tickets over 10000',\r\n                    'Average ticket by ticket type last year',\r\n                    'Total tickets by type by month for the last six months',\r\n                ],\r\n            },\r\n        ],\r\n        locate: [\r\n            {\r\n                topic: 'Sales',\r\n                queries: [\r\n                    'Total sales by state last year',\r\n                    'Average sales by month last year',\r\n                    'Total sales by customer this year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Purchase Orders',\r\n                queries: [\r\n                    'Last purchase order over 10000',\r\n                    'Total purchase orders by vendor this year',\r\n                    'All unissued purchase orders from last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Parts',\r\n                queries: [\r\n                    'Top 5 parts by sales order',\r\n                    'Show me all parts expiring this year',\r\n                    'All parts priced below last cost',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Margins',\r\n                queries: [\r\n                    'Gross margin by part this year',\r\n                    'Gross margin by customer last year',\r\n                    'Gross margin by invoice this year',\r\n                ],\r\n            },\r\n        ],\r\n        demo: [\r\n            {\r\n                topic: 'Sales',\r\n                queries: [\r\n                    'Total sales last month',\r\n                    'Top 5 customers by sales this year',\r\n                    'Total sales by revenue account last year',\r\n                    'Total sales by item from services last year',\r\n                    'Average sales per month last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Items',\r\n                queries: [\r\n                    'Top 5 items by sales',\r\n                    'Which items were sold the least last year',\r\n                    'Average items sold per month last year',\r\n                    'Total profit per item last month',\r\n                    'Total items sold for services last month',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Expenses',\r\n                queries: [\r\n                    'All expenses last month',\r\n                    'Monthly expenses by vendor last year',\r\n                    'Total expenses by account last quarter',\r\n                    'Total expenses by quarter last year',\r\n                    'Show me expenses last year over 10000',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Purchase Orders',\r\n                queries: [\r\n                    'All purchases over 10000 this year',\r\n                    'All open purchase orders',\r\n                    'Total purchase orders by vendor this year',\r\n                    'Total purchase orders by quarter last year',\r\n                    'Top 5 vendors by purchase orders',\r\n                ],\r\n            },\r\n        ],\r\n        lefort: [\r\n            {\r\n                topic: 'Ingresos',\r\n                queries: [\r\n                    'ingresos el año pasado',\r\n                    'ingresos totales por mes 2017',\r\n                    'promedio de las facturas de ingresos por mes 2017',\r\n                    'cuántos facturas de ingresos hay por mes 2017',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Egresos',\r\n                queries: [\r\n                    'egresos para MXN',\r\n                    'egresos totales para MXN',\r\n                    'promedio de las facturas de egresos por mes 2017',\r\n                    'cuántos facturas de egresos hay por mes 2017',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Pagos',\r\n                queries: [\r\n                    'pagos el año pasado',\r\n                    'promedio de pagos por año',\r\n                    'pagos totales 2017',\r\n                    'pagos totales por autorizado por tipo',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Nómina',\r\n                queries: [\r\n                    'nóminas',\r\n                    'nómina total por año',\r\n                    'promedio de nómina por año',\r\n                    'cuántas nóminas hay por mes',\r\n                ],\r\n            },\r\n        ],\r\n        vitruvi: [\r\n            {\r\n                topic: 'Tickets',\r\n                queries: [\r\n                    'All open tickets due this year',\r\n                    'All tickets created last year',\r\n                    'Number of tickets by status',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Work Package',\r\n                queries: [\r\n                    'All work packages created this year',\r\n                    'how many work packages for each manager this year',\r\n                    'how many work packages by type last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Work Order',\r\n                queries: [\r\n                    'List all work orders created this year',\r\n                    'Number of working orders in progress by region this year',\r\n                    'Number of work orders by program this year',\r\n                ],\r\n            },\r\n        ],\r\n        bluelink: [\r\n            {\r\n                topic: 'Sales orders',\r\n                queries: [\r\n                    'All open sales orders from last year',\r\n                    'Total sales orders by customer last year',\r\n                    'Total sales orders by month last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Products',\r\n                queries: [\r\n                    'All products sold at a loss last year',\r\n                    'Top 5 average sales orders by product last year',\r\n                    'Total sales by product by month last year',\r\n                ],\r\n            },\r\n            {\r\n                topic: 'Gross margin',\r\n                queries: [\r\n                    'Total gross margin by country last year',\r\n                    'Total gross margin by customer last year',\r\n                    'Total gross margin by product last year',\r\n                ],\r\n            },\r\n        ]\r\n    }\r\n\r\n    return topics[integrator]\r\n}\r\n\r\nfunction closeAllChartPopovers(){\r\n    var list = document.querySelectorAll(\r\n        '.autoql-vanilla-popover-selector'\r\n    )\r\n    for (var i = 0; i < list.length; i++) {\r\n        if(list[i].isOpen)list[i].close();\r\n    }\r\n}\r\n\r\nfunction closeAllSafetynetSelectors(){\r\n    var list = document.querySelectorAll(\r\n        '.autoql-vanilla-safetynet-selector'\r\n    )\r\n    for (var i = 0; i < list.length; i++) {\r\n        if(list[i].isOpen)list[i].hide();\r\n    }\r\n}\r\n\r\nfunction closeAllToolbars(){\r\n    var list = document.querySelectorAll(\r\n        '.autoql-vanilla-chat-message-toolbar.show'\r\n    )\r\n\r\n    var submenus = document.querySelectorAll(\r\n        '.chata-popover-wrapper.show'\r\n    )\r\n\r\n    for (var i = 0; i < list.length; i++) {\r\n        list[i].classList.remove('show');\r\n    }\r\n\r\n    for (var i = 0; i < submenus.length; i++) {\r\n        submenus[i].classList.remove('show');\r\n    }\r\n}\r\n\r\nfunction getSuggestionLists (query, fullSuggestions) {\r\n    const suggestionLists = []\r\n    if (fullSuggestions.length) {\r\n        fullSuggestions.forEach((suggestionInfo, index) => {\r\n            const originalWord = query.slice(\r\n                suggestionInfo.start,\r\n                suggestionInfo.end\r\n            )\r\n\r\n            // Add ID to each original suggestion\r\n            const originalSuggestionList = suggestionInfo.suggestions.map(\r\n                suggestion => {\r\n                    return {\r\n                        index: i,\r\n                        ...suggestion,\r\n                    }\r\n                }\r\n            )\r\n\r\n            // Add original query value to suggestion list\r\n            const list = [\r\n                ...originalSuggestionList,\r\n                { text: originalWord, value_label: 'Original term' },\r\n            ]\r\n\r\n            suggestionLists.push(list)\r\n        })\r\n    }\r\n    return suggestionLists\r\n}\r\n\r\nfunction getPlainTextList(query, fullSuggestions) {\r\n    const textList = []\r\n    let lastEndIndex = 0\r\n\r\n    fullSuggestions.forEach((fullSuggestion, index) => {\r\n        textList.push(query.slice(lastEndIndex, fullSuggestion.start))\r\n        if (index === fullSuggestions.length - 1) {\r\n            textList.push(query.slice(fullSuggestion.end, query.length))\r\n        }\r\n        lastEndIndex = fullSuggestion.end\r\n    })\r\n\r\n    return textList\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src_node/Utils.js\n");

/***/ }),

/***/ "./src_node/index.js":
/*!***************************!*\
  !*** ./src_node/index.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utils */ \"./src_node/Utils.js\");\n\r\n\r\nconsole.log(Object(_Utils__WEBPACK_IMPORTED_MODULE_0__[\"uuidv4\"])());\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmNfbm9kZS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyY19ub2RlL2luZGV4LmpzPzlhMmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXVpZHY0IH0gZnJvbSAnLi9VdGlscydcclxuXHJcbmNvbnNvbGUubG9nKHV1aWR2NCgpKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src_node/index.js\n");

/***/ })

/******/ });